<h3>Camera</h3>

<div class="camera-grid">
    @for (int i = 1; i <= 3; i++)
    {
        <div class="camera-item">
            <button class="btn btn-primary mb-2" @onclick="() => TakePhotoAsync(i)">📷</button>
            @if (GetPhoto(i) is string path && !string.IsNullOrEmpty(path))
            {
                <img src="@path" class="camera-img rounded" />
            }
            else
            {
                <div class="placeholder-box"></div>
            }
        </div>
    }
</div>

<style>
    .camera-grid {
        display: grid;
        grid-template-columns: repeat(3, 1fr);
        gap: 1rem;
        height: 100%;
    }

    .camera-item {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: flex-start;
    }

    .camera-img,
    .placeholder-box {
        width: 100%;
        height: 100%;
        flex-grow: 1;
        object-fit: cover;
        background-color: #2c2c2c;
        border: 2px dashed #555;
        border-radius: 4px;
    }
</style>

@code {
    string? photo1, photo2, photo3;

    string? GetPhoto(int index) => index switch
    {
        1 => photo1,
        2 => photo2,
        3 => photo3,
        _ => null
    };

    async Task TakePhotoAsync(int index)
    {
        try
        {
            if (!MediaPicker.Default.IsCaptureSupported)
            {
                await App.Current.MainPage.DisplayAlert("Error", "Camera not supported", "OK");
                return;
            }

            var photo = await MediaPicker.Default.CapturePhotoAsync();
            if (photo is not null)
            {
                var newFile = Path.Combine(FileSystem.CacheDirectory, photo.FileName);
                using var stream = await photo.OpenReadAsync();
                using var newStream = File.OpenWrite(newFile);
                await stream.CopyToAsync(newStream);

                switch (index)
                {
                    case 1: photo1 = newFile; break;
                    case 2: photo2 = newFile; break;
                    case 3: photo3 = newFile; break;
                }
            }
        }
        catch (Exception ex)
        {
            await App.Current.MainPage.DisplayAlert("Error", ex.Message, "OK");
        }
    }
}